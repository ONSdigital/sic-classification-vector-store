# --- Stage 1: Download HuggingFace model ---
    FROM python:3.12-slim AS model-downloader

    # --- Set environment variables for Poetry ---
    ENV POETRY_VERSION=2.1.1 \
        POETRY_HOME="/opt/poetry" \
        PATH="$POETRY_HOME/bin:$PATH" \
        PYTHONDONTWRITEBYTECODE=1 \
        PYTHONUNBUFFERED=1 \
        HF_HOME="/models"
    
    # --- Install system dependencies and Poetry ---
    RUN apt-get update && \
        apt-get install -y curl build-essential && \
        curl -sSL https://install.python-poetry.org | python3 - && \
        apt-get remove -y curl && \
        apt-get clean && \
        rm -rf /var/lib/apt/lists/*
    
    # --- Install only the minimum packages needed to download the model ---
    RUN /opt/poetry/bin/poetry config virtualenvs.create false
    RUN pip install sentence-transformers
    
    # --- Download the model during build ---
    RUN python -c "from sentence_transformers import SentenceTransformer; SentenceTransformer('sentence-transformers/all-MiniLM-L6-v2')"
    
    # -------------------------------------------------------------------
    
    # --- Stage 2: Actual application image ---
    FROM python:3.12-slim
    
    # --- Set environment variables ---
    ENV POETRY_VERSION=2.1.1 \
        POETRY_HOME="/opt/poetry" \
        PATH="$POETRY_HOME/bin:$PATH" \
        PYTHONDONTWRITEBYTECODE=1 \
        PYTHONUNBUFFERED=1 \
        HF_HOME="/app/models"
    
    # --- Install system dependencies and Poetry ---
    RUN apt-get update && \
        apt-get install -y curl build-essential && \
        curl -sSL https://install.python-poetry.org | python3 - && \
        apt-get remove -y curl && \
        apt-get clean && \
        rm -rf /var/lib/apt/lists/*
    
    # --- Create a non-root user and working directory ---
    RUN groupadd --gid 1001 appuser && \
        useradd --uid 1001 --gid appuser --shell /bin/bash --create-home appuser
    
    WORKDIR /app
    
    # --- Copy only whatâ€™s needed to install dependencies first (cache efficient) ---
    COPY pyproject.toml poetry.lock ./
    
    RUN /opt/poetry/bin/poetry config virtualenvs.create false && \
        /opt/poetry/bin/poetry install --no-root --only main
    
    # --- Copy the rest of the application code ---
    COPY src/sic_classification_vector_store/ ./sic_classification_vector_store/
    
    # --- Copy the predownloaded HuggingFace model from stage 1 ---
    COPY --from=model-downloader /models /app/models
    
    # --- Create writable vector store directory ---
    RUN mkdir -p ./sic_classification_vector_store/data/vector_store && \
        chown -R appuser:appuser /app
    
    # --- Switch to non-root user ---
    USER appuser
    
    # --- Expose the application port ---
    EXPOSE 8088
    
    # --- Start the FastAPI server (no --reload for production) ---
    CMD ["/opt/poetry/bin/poetry", "run", "uvicorn", "sic_classification_vector_store.api.main:app", "--host", "0.0.0.0", "--port", "8088"]
    